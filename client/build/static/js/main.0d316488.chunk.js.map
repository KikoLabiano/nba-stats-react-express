{"version":3,"sources":["logo.svg","components/players/PlayerStatChartsContainerComponent.js","components/players/PlayerComponent.js","components/StatComponent.js","components/StatContainerComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PlayerStatChartsContainerComponent","state","playerPointsBySeason","playerReboundsBySeason","playerAssistsBySeason","options","title","text","subtitle","yAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","name","data","responsive","rules","condition","maxWidth","chartOptions","getPlayerStats","_callee","response","body","regenerator_default","a","wrap","_context","prev","next","fetch","_this","props","playerId","sent","json","status","Error","message","abrupt","stop","_this2","this","then","res","seasonTotalsRS","resultSets","filter","el","seasons","points","rebounds","assists","initSeason","Number","rowSet","toString","substring","forEach","season","i","push","toFixed","setState","prevState","Object","objectSpread","catch","err","console","log","react_default","createElement","className","lib","active","highcharts_react_min_default","highcharts","Highcharts","Component","PlayerComponent","playerInfo","backgroundImage","getPlayerInfo","playerNumber","playerPosition","playerTeam","playerHeight","playerWeight","playerCountryCollege","playerBirthday","playerPoints","playerRebounds","playerAssists","playerPIE","playerAge","Date","getFullYear","playerDraft","playerExperience","concat","header","playerName","trigger","style","s","src","split","rowSpan","players_PlayerStatChartsContainerComponent","StatComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createTable","pct","table","length","children","players_PlayerComponent","headers","toUpperCase","indexOf","m","textClassName","data-field","StatContainerComponent","StatsSeason","map","stat","components_StatComponent","assign","key","App","post","responseToPost","callApi","handleSubmit","_callee2","e","_context2","preventDefault","method","Content-Type","JSON","stringify","_this3","id","components_StatContainerComponent","onSubmit","type","value","onChange","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d316488.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport {Tabs, Tab} from 'react-materialize';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nclass PlayerStatChartsContainerComponent extends Component{\r\n\r\n    state={\r\n        playerPointsBySeason:[],\r\n        playerReboundsBySeason:[],\r\n        playerAssistsBySeason:[],\r\n        options: {\r\n          title: {\r\n            text: 'Stats'\r\n        },\r\n        subtitle: {\r\n          text: ''\r\n        },\r\n        yAxis: {\r\n          title: {\r\n              text: 'Values'\r\n          }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'middle'\r\n        },\r\n    \r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false\r\n                },\r\n                pointStart: 2010\r\n            }\r\n        },\r\n    \r\n        series: [{\r\n            name: 'Points',\r\n            data: []\r\n        }, {\r\n            name: 'Rebounds',\r\n            data: []\r\n        }, {\r\n            name: 'Assists',\r\n            data: []\r\n        }],\r\n    \r\n        responsive: {\r\n            rules: [{\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        this.getPlayerStats()\r\n          .then(res => {\r\n              let seasonTotalsRS = res.resultSets.filter( function (el) {\r\n                return el.name === \"SeasonTotalsRegularSeason\";\r\n              });\r\n            // console.log(seasonTotalsRS[0].rowSet[0]);\r\n\r\n            let seasons = [];\r\n            let points = [];\r\n            let rebounds = [];\r\n            let assists = [];\r\n            let initSeason = Number(seasonTotalsRS[0].rowSet[0][1].toString().substring(0,4));\r\n            seasonTotalsRS[0].rowSet.forEach((season,i)=>{\r\n              seasons.push(season[1]);\r\n              points.push(Number((Number(season[26])/Number(season[6])).toFixed(2)));\r\n              rebounds.push(Number((Number(season[26])/Number(season[20])).toFixed(2)));\r\n              assists.push(Number((Number(season[26])/Number(season[21])).toFixed(2)));\r\n              \r\n            });\r\n\r\n            this.setState(prevState=>({  \r\n            options: {...prevState.options,\r\n              subtitle: {text: 'Pruebaaa'},\r\n              plotOptions: {\r\n                series: {\r\n                    label: {\r\n                        connectorAllowed: false\r\n                    },\r\n                    pointStart: initSeason\r\n                }\r\n            },\r\n              series: [{\r\n                    name: 'Points',\r\n                    data: points\r\n                }, {\r\n                    name: 'Rebounds',\r\n                    data: rebounds\r\n                }, {\r\n                    name: 'Assists',\r\n                    data: assists\r\n                }]\r\n            }\r\n            }));\r\n        })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n    getPlayerStats = async () => {\r\n        const response = await fetch('/api/playerStats/' + this.props.playerId);\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        return body;\r\n      };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container playerStatChartsContainer\">\r\n            <div className=\"section\">\r\n            <Tabs className='tab-demo z-depth-1' >\r\n                <Tab title=\"Career RS Stats\" active>\r\n                <div>\r\n                    <HighchartsReact\r\n                      highcharts={Highcharts}\r\n                      options={this.state.options}\r\n                    />\r\n                  </div>\r\n                </Tab>\r\n                <Tab title=\"Career Playoffs Stats\"></Tab>\r\n                <Tab title=\"Career totals\"></Tab>\r\n                <Tab title=\"Career highs\"></Tab>\r\n                <Tab title=\"Blocks\"></Tab>\r\n            </Tabs>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n        </div>    \r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerStatChartsContainerComponent;","import React, { Component } from 'react';\r\nimport {Modal, Row, Col} from 'react-materialize';\r\nimport PlayerStatChartsContainerComponent from './PlayerStatChartsContainerComponent';\r\nimport '../../css/players/PlayerComponentCSS.css';\r\n\r\nclass PlayerComponent extends Component{\r\n    state={\r\n        playerInfo:{},\r\n        backgroundImage: \"\"\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getPlayerInfo()\r\n          .then(res => {\r\n            console.log(res.resultSets);\r\n            this.setState(prevState=>({         \r\n                playerInfo: {...prevState.playerInfo, \r\n                playerNumber: res.resultSets[0].rowSet[0][13],\r\n                playerPosition: res.resultSets[0].rowSet[0][14],\r\n                playerTeam: res.resultSets[0].rowSet[0][20] + res.resultSets[0].rowSet[0][17],\r\n                playerHeight: res.resultSets[0].rowSet[0][10],\r\n                playerWeight: res.resultSets[0].rowSet[0][11],\r\n                playerCountryCollege: res.resultSets[0].rowSet[0][9],\r\n                playerBirthday: res.resultSets[0].rowSet[0][6].substring(0,10),\r\n                playerPoints: res.resultSets[1].rowSet[0][3],\r\n                playerRebounds: res.resultSets[1].rowSet[0][5],\r\n                playerAssists: res.resultSets[1].rowSet[0][4],\r\n                playerPIE: Number(res.resultSets[1].rowSet[0][6])*100,\r\n                playerAge: Number(new Date().getFullYear()) - Number(res.resultSets[0].rowSet[0][6].substring(0,4)),\r\n                playerDraft: res.resultSets[0].rowSet[0][22] + \" Rnd \" + res.resultSets[0].rowSet[0][28] + \" Pick \" + res.resultSets[0].rowSet[0][29],\r\n                playerExperience: Number(res.resultSets[0].rowSet[0][23]) - Number(res.resultSets[0].rowSet[0][22])                \r\n                },\r\n                backgroundImage: `url('../../css/img/${res.resultSets[0].rowSet[0][18]}.png')`\r\n            }));\r\n            //console.log(this.state.playerCommonInfo.rowSet[0][13],this.state.playerHeadlineStats.rowSet[0]);\r\n        })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      getPlayerInfo = async () => {\r\n        const response = await fetch('/api/playerInfo/' + this.props.playerId);\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        return body;\r\n      };\r\n\r\n    render(){\r\n        return(\r\n            <Modal header={this.props.playerName}\r\n                trigger={this.props.trigger} className=\"playerComponentModal\">  \r\n                <Row className=\"playerComponentBackground\" style={{backgroundImage: this.state.backgroundImage}}>\r\n                    <Col s={4} className='playerComponentPlayerPhoto'><img src={`https://nba-players.herokuapp.com/players/${this.props.playerName.split(\" \")[1]}/${this.props.playerName.split(\" \")[0]}`}></img></Col>\r\n                    <Col s={2} className='grid'><h2 className=\"playerComponentTitleText\">#{this.state.playerInfo.playerNumber}|{this.state.playerInfo.playerPosition}</h2></Col>\r\n                    <Col s={2} className='grid'><h4 className=\"playerComponentTitleText\">{this.state.playerInfo.playerTeam}</h4></Col>\r\n                </Row>\r\n                <Row className=\"playerComponentBackground playerComponentTitleText\">\r\n                    <Col s={2} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>HT</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerHeight}</h5>\r\n                    </Col>\r\n                    <Col s={2} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>WT</p></div>  \r\n                        <br/>  \r\n                        <h5>{this.state.playerInfo.playerWeight} lbs</h5>\r\n                    </Col>\r\n                    <Col s={4} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Prior</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerCountryCollege}</h5>\r\n                    </Col>\r\n                    <Col s={1} className='playerComponentGrid' rowSpan=\"2\">\r\n                        <div className=\"playerComponentTile\"><p>Pts</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerPoints}</h5>\r\n                    </Col>\r\n                    <Col s={1} className='playerComponentGrid' rowSpan=\"2\">\r\n                        <div className=\"playerComponentTile\"><p>Rbs</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerRebounds}</h5>\r\n                    </Col>\r\n                    <Col s={1} className='playerComponentGrid' rowSpan=\"2\">\r\n                        <div className=\"playerComponentTile\"><p>Ast</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerAssists}</h5>\r\n                    </Col>\r\n                    <Col s={1} className='playerComponentGrid' rowSpan=\"2\">\r\n                        <div className=\"playerComponentTile\"><p>PIE</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerPIE}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"playerComponentBackground playerComponentTitleText\">\r\n                    <Col s={2} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Age</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerAge}</h5>\r\n                    </Col>\r\n                    <Col s={2} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Born</p></div>  \r\n                        <br/>  \r\n                        <h5>{this.state.playerInfo.playerBirthday}</h5>\r\n                    </Col>\r\n                    <Col s={3} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Draft</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerDraft}</h5>\r\n                    </Col>\r\n                    <Col s={1} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Exp</p></div>    \r\n                        <br/>\r\n                        <h5>{this.state.playerInfo.playerExperience}</h5>\r\n                    </Col>\r\n                    <Col s={4} className='playerComponentGrid'>\r\n                        <div className=\"playerComponentTile\"><p>Name</p></div>    \r\n                        <br/>\r\n                        <h5>{this.props.playerName}</h5>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col s={12}>\r\n                        <PlayerStatChartsContainerComponent playerId={this.props.playerId}/>\r\n                    </Col>\r\n                </Row>                           \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerComponent;","import React, { Component } from 'react';\r\nimport {Card, Col,Table, Modal, Button} from 'react-materialize'\r\nimport PlayerComponent from './players/PlayerComponent';\r\n\r\nclass StatComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    createTable = () => {\r\n        let table = []\r\n\r\n        // this.props.rowset.map((row, i) => {\r\n        //     table.push(<tr>)\r\n        //     row.map((r,j)=>({\r\n        //         table.push(<td>{r[0]}</td>\r\n        //             <td>{r[2]}</td>\r\n        //             <td>{r[4]}</td>\r\n        //             <td>{r[8]}</td>)                \r\n        //     }));\r\n        //     table.push(</th>)\r\n        // });\r\n\r\n        // Outer loop to create parent\r\n\r\n        // this.props.rowSet.map((row,i)=>{\r\n        //     let children = [];\r\n        //     children.push(<td>{row[i][0]}</td>);\r\n        //             children.push(<td>{row[i][2]}</td>);\r\n        //             children.push(<td>{row[i][4]}</td>);\r\n        //             children.push(<td>{row[i][8]}</td>);\r\n        //         table.push(<tr>{children}</tr>)\r\n        // });\r\n        let pct;\r\n        for (let i = 0; i < this.props.rowSet.length; i++) {\r\n          let children = []     \r\n            children.push(<td>{this.props.rowSet[i][0]}</td>);\r\n            children.push(<td><PlayerComponent playerName={this.props.rowSet[i][2]}\r\n                trigger={<a>{this.props.rowSet[i][2]}</a>} playerId={this.props.rowSet[i][1]}></PlayerComponent></td>);\r\n            children.push(<td>{this.props.rowSet[i][4]}</td>);\r\n            if(this.props.headers[this.props.headers.length-1].toString().toUpperCase().indexOf(\"PCT\")>-1){\r\n                pct=(Number(this.props.rowSet[i][8]) * 100).toFixed(2).toString() + \" %\";\r\n            }\r\n            else{\r\n                pct = this.props.rowSet[i][8];\r\n            }\r\n            children.push(<td>{pct}</td>);\r\n          table.push(<tr>{children}</tr>)\r\n        }\r\n       \r\n        return table\r\n      }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Col m={6} s={12}>\r\n                <Card textClassName='black-text' title={this.props.headers[this.props.headers.length-1]}>\r\n                    <Table>  \r\n                    <thead>\r\n                        <tr>\r\n                        <th data-field=\"id\">Rank</th>\r\n                        <th data-field=\"playerName\">Player</th>\r\n                        <th data-field=\"playerTeam\">Team</th>\r\n                        <th data-field=\"dataValue\">#</th>\r\n                        </tr>\r\n                    </thead>                  \r\n                    <tbody>\r\n                        {this.createTable()}\r\n                    </tbody>\r\n                    </Table>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatComponent;","import React, { Component } from 'react';\r\nimport StatComponent from './StatComponent';\r\nimport {Tabs, Tab} from 'react-materialize';\r\n\r\nclass StatContainerComponent extends Component{\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"section\">\r\n            <Tabs className='tab-demo z-depth-1' >\r\n                <Tab title=\"Season\" active>\r\n                {this.props.StatsSeason.map((stat,i)=> <StatComponent key={i} {...stat}/>)}\r\n                </Tab>\r\n                <Tab title=\"NBA Today\"></Tab>\r\n                <Tab title=\"Historical\"></Tab>\r\n                <Tab title=\"Highs\"></Tab>\r\n            </Tabs>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n        </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default StatContainerComponent","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './css/App.css';\r\nimport {Tabs, Col, Row, Button, Icon, Grid} from 'react-materialize'\r\nimport StatContainerComponent from './components/StatContainerComponent'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: [],\r\n    post: '',\r\n    responseToPost: '',\r\n  };\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => {\r\n        this.setState({ response: res.resultSets });\r\n        console.log(\"Response: \" + this.state.response);})\r\n      .catch(err => console.log(err));\r\n  }\r\n  callApi = async () => {\r\n    const response = await fetch('/api/seasonLeaderStats');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    return body;\r\n  };\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/world', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ post: this.state.post }),\r\n    });\r\n    const body = await response.text();\r\n    this.setState({ responseToPost: body });\r\n  };\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <div>\r\n        <div className=\"section no-pad-bot\" id=\"index-banner\">\r\n          <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n            <h1 className=\"header center blue-text\">NBA Stats</h1>\r\n            <div className=\"row center\">\r\n              <h5 className=\"header col s12 light\">Check every NBA stat you can imagine!</h5>\r\n            </div>      \r\n            <br/><br/>\r\n          </div>\r\n        </div>\r\n\r\n        <StatContainerComponent StatsSeason = {this.state.response}/>\r\n\r\n        <footer className=\"page-footer blue\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">NBA Stats</h5>\r\n              </div>        \r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">      \r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n\r\n\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.post}\r\n            onChange={e => this.setState({ post: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <p>{this.state.responseToPost}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}